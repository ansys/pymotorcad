name: GitHub CI
on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.7'
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  DOCUMENTATION_CNAME: 'motorcad.docs.pyansys.com'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys code style checks
        uses: pyansys/actions/code-style@v3
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: pyansys/actions/doc-style@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: Tests and coverage
    needs: doc-build
    runs-on: [self-hosted, pymotorcad]
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Ensure Motor-CAD not open
        run: taskkill /IM Motor-CAD_2023_1_1.exe /F /FI "STATUS eq RUNNING"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox tox-gh-actions
          
      - name: Test with tox
        # Only the tox environment specified in the tox.ini gh-actions is run
        run: tox -e py310-coverage  
        
      - uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.10'
        name: 'Upload coverage to Codecov'


  doc-build:
    name: "Building library documentation"
    runs-on: [self-hosted, pymotorcad]
    needs: doc-style
    steps:
      - uses: actions/checkout@v3

      - name: Ensure Motor-CAD not open
        run: taskkill /IM Motor-CAD_2023_1_1.exe /F /FI "STATUS eq RUNNING"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox tox-gh-actions
      - name: Generate the documentation with tox
        run: tox -e doc

      - name: Upload HTML documentation
        uses: actions/upload-artifact@v3
        with:
          name: documentation-html
          path: .tox/doc_out/
          retention-days: 7

  doc-deploy:
    name: "Deploy development documentation"
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: doc-build
    steps:
      - name: "Deploy development documentation"
        uses: pyansys/actions/doc-deploy-dev@v2
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}


  build:
    name: Build library
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies and build the library
        run: |
          python -m pip install build twine
          python -m build
          python -m twine check dist/*
